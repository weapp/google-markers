<html>
  <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <title>Google Maps Multiple Markers</title>
    <script src="http://maps.google.com/maps/api/js?sensor=false"
            type="text/javascript"></script>

    <script src="https://cdn.rawgit.com/googlemaps/js-marker-clusterer/gh-pages/src/markerclusterer.js"
            type="text/javascript"></script>

    <script src="https://rawgit.com/pa7/heatmap.js/master/build/heatmap.js"
            type="text/javascript"></script>

    <script src="https://cdn.rawgit.com/pa7/heatmap.js/develop/plugins/gmaps-heatmap/gmaps-heatmap.js"
            type="text/javascript"></script>

    <style>
      html{height:100%; padding: 0; margin: 0}
      body{height:100%; padding: 0; margin: 0}
      .box{position: absolute;z-index: 999999;padding: 1em;background: #FFF}
    </style>
  </head>
  <body>
     <div class="box">
       <h1>Simple Echo & Chat Server</h1>
       <form id="form">
         <input type="text" id="input" placeholder="send a message"></input>
       </form>
       <div id="msgs"></div>
     </div>
     <div id="map" style="width: 100%; height: 100%;"></div>
  </body>

  <script type="text/javascript">
    function now() {
      return Date.now() / 1000
    }

    function Markers(){
      function heat_markers(list) {
        return list.map(function(obj){
            obj["value"] = (obj["when"] - now() + 100);
            return obj;
          }).filter(function(obj){
            return obj["value"] > 0;
          });
      }

      this.markers = []

      this.push = function(pos) {
        pos["when"] = now()
        this.markers.push(pos);
        this.markers = heat_markers(this.markers);
        return this.markers;
      }

    }

    function Map(el, pos) {
      pos = new google.maps.LatLng(pos.lat, pos.lng);

      var map = new google.maps.Map(el, {
        zoom: 6,
        center: pos,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      });

      var markers = new Markers();

      // heatmap layer
      // this.heatmap = new HeatmapOverlay(map,
      //   {
      //     "radius": 0.003,
      //     "maxOpacity": 0.4,
      //     "scaleRadius": true,
      //     "useLocalExtrema": true,
      //     latField: 'lat',
      //     lngField: 'lon',
      //     valueField: 'value'
      //   }
      // );

      this.heatmap = new HeatmapOverlay(map,
        {
          radius: 10,
          maxOpacity: 0.4,
          scaleRadius: false,
          useLocalExtrema: true,
          latField: 'lat',
          lngField: 'lon',
          valueField: 'value'
        }
      );

      this.push = function(m) {
        this.heatmap.setData({ max: 1, data: markers.push(m) });
      }

    }

    function WS(router) {
      this.ws = new WebSocket('ws://' + window.location.host + window.location.pathname);
      this.ws.onopen = router["onopen"]
      this.ws.onclose   = router["onclose"]
      this.ws.onmessage = function(m) {
        data = JSON.parse(m.data);
        controller = router[data["type"]] || function(data){}
        controller(data);
      };

      this.send_msg = function(value) {
        this.ws.send(JSON.stringify({"type": "msg", "msg": value}));
      }
    }


    window.onload = function(){

      (function(){
        var byId = function(id) {
          return document.getElementById(id)Â 
        }

        var madrid = {lat: 40.4165000, lng: -3.7025600}
        var map = new Map(byId('map'), madrid)
        var router = {
          msg : function(m){ show_message('ws msg: ' +  m.msg); },
          location : function(m){ map.push(m) }
        }
        var show_message = function(el){
          return function(msg){ el.innerHTML = msg + '<br />' + el.innerHTML; }
        }(byId('msgs'));
        var ws = new WS(router);
        var sender = function(f, input){
          f.onsubmit = function(){
            ws.send_msg(input.value)
            input.value = "";
            return false;
          }
        }(byId('form'), byId('input'));
      })();
    }
  </script>
</html>
