<html>
  <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <title>Google Maps Multiple Markers</title>
    <script src="http://maps.google.com/maps/api/js?sensor=false"
            type="text/javascript"></script>

    <script type="text/javascript" src="https://cdn.rawgit.com/googlemaps/js-marker-clusterer/gh-pages/src/markerclusterer.js"></script>

    <script src="https://rawgit.com/pa7/heatmap.js/master/build/heatmap.js"
            type="text/javascript"></script>

    <script src="https://cdn.rawgit.com/pa7/heatmap.js/develop/plugins/gmaps-heatmap/gmaps-heatmap.js"
            type="text/javascript"></script>

    <style>
      html{height:100%; padding: 0; margin: 0}
      body{height:100%; padding: 0; margin: 0}
      .box{position: absolute;z-index: 999999;padding: 1em;background: #FFF}
    </style>
  </head>
  <body>
     <div class="box">
       <h1>Simple Echo & Chat Server</h1>
       <form id="form">
         <input type="text" id="input" placeholder="send a message"></input>
       </form>
       <div id="msgs"></div>
     </div>
     <div id="map" style="width: 100%; height: 100%;"></div>
  </body>

  <script type="text/javascript">

    window.onload = function(){
      (function(){
        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 6,
          center: new google.maps.LatLng(40.4165000, -3.7025600),
          mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        var markers = [];

        function now() {
          return Date.now() / 1000
        }

        function push(list, pos) {
          pos["when"] = now()
          list.push(pos)
          return heat_markers(list);
        }

        function heat_markers(list) {
          return list.map(function(obj){
              obj["value"] = (obj["when"] - now() + 100)
              return obj
            }).filter(function(obj){
              return obj["value"] > 0
            });
        }

        // heatmap layer
        // var heatmap = new HeatmapOverlay(map,
        //   {
        //     "radius": 0.003,
        //     "maxOpacity": 0.4,
        //     "scaleRadius": true,
        //     "useLocalExtrema": true,
        //     latField: 'lat',
        //     lngField: 'lon',
        //     valueField: 'value'
        //   }
        // );

        var heatmap = new HeatmapOverlay(map,
          {
            "radius": 10,
            "maxOpacity": 0.4,
            "scaleRadius": false,
            "useLocalExtrema": true,
            latField: 'lat',
            lngField: 'lon',
            valueField: 'value'
          }
        );

        var router = {
          msg : function(m){ show('ws msg: ' +  m.msg); },
          location : function(m){
            markers = push(markers, m)
            heatmap.setData({ max: 1, data: markers });
          }
        }

        var show = function(el){
          return function(msg){ el.innerHTML = msg + '<br />' + el.innerHTML; }
        }(document.getElementById('msgs'));

        var ws       = new WebSocket('ws://' + window.location.host + window.location.pathname);
        ws.onopen    = function()  { show('ws open'); };
        ws.onclose   = function()  { show('ws close'); }
        ws.onmessage = function(m) {
          data = JSON.parse(m.data);
          controller = router[data["type"]] || function(data){}
          controller(data);
        };

        var sender = function(f){
          var input     = document.getElementById('input');
          input.onclick = function(){ input.value = "" };
          f.onsubmit    = function(){
            ws.send(JSON.stringify({"type": "msg", "msg": input.value}));
            input.value = "";
            return false;
          }
        }(document.getElementById('form'));
      })();
    }
  </script>
</html>
